this files contains tests for ``matrix_divided()`` function

>>> from importlib import import_module
>>> matrix_divided = import_module('2-matrix_divided').matrix_divided

# now start testing the function

>>> matrix_divided([[6,4,2]], 2)
[[3.0, 2.0, 1.0]]
>>> matrix_divided([[6, 4, 2]], "2")
Traceback (most recent call last):
    ...
TypeError: div must be a number

>>> matrix_divided([[4, 3, 2]], 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

>>> matrix_divided([4,2,1], 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[2,3], [1, 2, 3]], 0)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[4,3,2]], float('inf'))
[[0.0, 0.0, 0.0]]

>>> matrix_divided([[4, 3, float('inf')]], 2)
[[2.0, 1.5, inf]]

>>> matrix_divided([[4, 3, float('inf')]], float('inf'))
[[0.0, 0.0, nan]]

>>> matrix_divided([[4,3,2]])
Traceback (most recent call last):
    ...
TypeError: matrix_divided() missing 1 required positional argument: 'div'

>>> matrix_divided()
Traceback (most recent call last):
    ...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'